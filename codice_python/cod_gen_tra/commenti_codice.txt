# Parametri meccanici
m : massa del veicolo (kg)
Iz : momento d'inerzia attorno all'asse z, 
Rappresenta la resistenza alla rotazione del veicolo (yaw) (kg x m^2)
lf : distanza centro di massa <-> asse anteriore 
Determina la distribuzione dei carichi e le forze di sterzo (m)
lr : distanza centro di massa <-> asse posteriore 
Determina il comportamento in curva e la stabilità (m)

# Parametri delle gomme
Bf, Cf, Df : coefficienti ruote anteriori 
Determinano la forma della curva forza-laterale vs angolo di slip (Magic Formula)
Br, Cr, Dr : coefficienti ruote posteriori 

# Parametri motore / resistenze 

Cm1 : coefficiente motore 1 
Parte della coppia motrice proporzionale al comando acceleratore
Cm2 : coefficiente motore 2 
Termine di perdita o saturazione del motore (riduce la coppia a velocità elevate)
Cr0 : reistenza di rotolamento statica 
Rappresenta l’attrito di base (cuscinetti, deformazioni gomme)
Cr2 : resistenza aereodinamica 
Dipende dal quadrato della velocità, simula la resistenza dell’aria

# Parametri fisici
g : accelerazione gravitazionale , costante 9.81 m/s²
maxAlpha : angolo di slip massimo (rad)
Limite massimo di angolo di deriva consentito
vx_zero : soglia di velocità minima 
Evita divisioni per zero nei calcoli delle slip angles (m/s)

# INPUT 
x = [X,Y, phi, vx, vy, omega]
X, Y : posizione del veicolo (m)
phi : angolo di imbardata (orientamento) (rad)
vx : velocità longitudinale (avanti / indietro) (m/s)
vy : velocità laterale (m/s)
omega : velocità angolare di imbardata (yam rate) (rad/s)

u = [d, delta]
d : comando motore (acceleratore / freno normalizzato)
delta : angolo di sterzo (rad)

p: dizionario di parametri (Params) che contiene tutte le costanti fisiche e gomme

Gli angoli di slip descrivono quanto le ruote “slittano” lateralmente rispetto alla direzione del moto.
alpha_f = -np.arctan2(omega * p["lf"] + vy, vx_eff) + delta # ruota anteriore subisce sia l'effetto del moto laterale che della rotazione del veicolo
alpha_r =  np.arctan2(omega * p["lr"] - vy, vx_eff) # ruota posteriore 

campling limita gli angoli di slip a +- maxAlpha

# Forze laterali Fy_f e Fy_r ( modello di Pacejka semplificato)
B : rigidità ( quanto cresce la forza con piccoli slip)
C : forma della curva
D : valore massimo (saturazione)

Più l'angolo di slip cresce, più la forza laterale aumenta fino a saturare simulando il limite d'aderenza

# Forza longitudinale Frx : è la forza propulsiva / frenante alle ruote posteriori 
è composta da coppia motrice e resistenza passive 

# OUTPUT : Fy_f (forza laterale sull'asse anteriore), Fy_r ( forza laterale sull'asse posteriore), Frx (forza longitudinale di trazione / frenata posteriore)


xk+1 = xk + Ts f(xk, uk)
linearizzando f attorno (x-,u-): f(x,u) = f(x-, u-) + Jx (x - x-) + Ju (u - u-)
Portando tutto in forma affine discreta xk+1 = Ad xk + Bd uk + g
Ad = I + Ts Jx
Bd = Ts Ju
g = x- + Ts f(x-, u-) - Ad x- - Bd u-
g è il bias che fa coincidere la dinamica lineare con la traiettoria nominale  (x- , u-)

# errore di tracking laterale 
è la proiezione del vettore posizione (X- Xref, Y - Yref) sulla normale sinistra alla posa di riferimento 
segno: positivo quando sei a sinitsra della direzione di marcia di riferimento 

# la traiettoria nominale è come il sistema si muoverebbe con i comandi attuali, senza correzione 
serve a linearizzare e semplificare il problema MPC
ad ogni passo l'MPC ricostruisce una nuova traiettoria nominale a partire dallo stato reale aggiornato 

# esempio -> se non tocchi nulla, il veicolo seguirà una certa traiettoria che è quella nominale 
l'MPC immagina questa traiettoria e poi calcola piccole modifiche a sterzo e acceleratore per farle aderire al path di riferimento 

